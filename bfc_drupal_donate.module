<?php

/* Stripe Donate Form Custom Module
 * Easy Stripe integration!
 */

function bfc_drupal_donate_menu() {
	$items = array();

	$items['admin/config/content/bfc_donate'] = array(
		'title' => 'Donate Form Configuration',
		'description' => 'Configuration settings for Stripe-integrated donate form',
		'page callback' => 'drupal_get_form',
		'page arguments' => array('bfc_drupal_donate_form'),
		'access arguments' => array('access administration pages'),
		'type' => MENU_NORMAL_ITEM,
	);

	return $items;
}

function bfc_drupal_donate_install() {

	$node = new stdClass();
	$node->type = 'webform';
	node_object_prepare($node);
	$node->title = 'Donate';
	$node->language = 'en';
	$node->body[LANGUAGE_NONE][0]['value']   = '';
	$node->body[LANGUAGE_NONE][0]['format']  = 'full_html';
	$node->uid = 1;
	$node->promote = 0;
	$node->comment = 0;

	// Create the webform components.
	$components = array(
	 array(
	  'name' => 'Full name',
	  'form_key' => 'name',
	  'type' => 'textfield',
	  'required' => 1,
	  'weight' => 0,
	  'pid' => 0,
	  'extra' => array(
	    'title_display' => 'before',
	    'private' => 0,
	  ),
	),
	array(
	  'name' => 'Email',
	  'form_key' => 'email',
	  'type' => 'email',
	  'required' => 1,
	  'weight' => 1,
	  'pid' => 0,
	  'extra' => array(
	    'title_display' => 'before',
	    'private' => 0,
	  ),
	),
	array(
	  'name' => 'Amount',
	  'form_key' => 'amount',
	  'type' => 'textfield',
	  'required' => 1,
	  'weight' => 2,
	  'pid' => 0,
	  'extra' => array(
	    'title_display' => 'before',
	    'private' => 0,
	    'width' => 10,
	    'field_prefix' => '$',
	    'maxlength' => 10,
	  ),
	),
	array(
	  'name' => 'Payment Information',
	  'form_key' => 'payment_information',
	  'type' => 'fieldset',
	  'required' => 0,
	  'weight' => 3,
	  'pid' => 0,
	  'extra' => array(
	    'title_display' => 0,
	    'private' => 0,
	  ),
	),
	array(
	  'name' => 'Credit Card Number',
	  'form_key' => 'credit_card_number',
	  'type' => 'textfield',
	  'required' => 1,
	  'weight' => 4,
	  'pid' => 4,
	  'extra' => array(
	    'title_display' => 'before',
	    'private' => 0,
	  ),
	),
	array(
	  'name' => 'Expiration Date',
	  'form_key' => 'expiration_date',
	  'type' => 'fieldset',
	  'required' => 0,
	  'weight' => 5,
	  'pid' => 4,
	  'extra' => array(
	    'title_display' => 0,
	    'private' => 0,
	  ),
	),
	array(
	  'name' => 'Expiration Month',
	  'form_key' => 'expiration_month',
	  'type' => 'textfield',
	  'required' => 1,
	  'weight' => 6,
	  'pid' => 6,
	  'extra' => array(
	    'title_display' => 'none',
	    'private' => 0,
	    'width' => 4,
	    'maxlength' => 2,
	    'wrapper_classes' => 'inline',
	  ),
	),
	array(
	  'name' => 'Expiration Year',
	  'form_key' => 'expiration_year',
	  'type' => 'textfield',
	  'required' => 1,
	  'weight' => 7,
	  'pid' => 6,
	  'extra' => array(
	    'title_display' => 'none',
	    'private' => 0,
	    'width' => 4,
	    'field_prefix' => '/',
	    'maxlength' => 2,
	    'wrapper_classes' => 'inline',
	  ),
	),
	array(
	  'name' => 'CVC',
	  'form_key' => 'cvc',
	  'type' => 'textfield',
	  'required' => 1,
	  'weight' => 8,
	  'pid' => 4,
	  'extra' => array(
	    'title_display' => 'before',
	    'private' => 0,
	    'width' => 4,
	    'maxlength' => 4,
	  ),
	),
	array(
	  'name' => 'Stripe Token',
	  'form_key' => 'stripe_token',
	  'type' => 'textfield',
	  'required' => 0,
	  'weight' => 9,
	  'pid' => 0,
	  'extra' => array(
	    'title_display' => 'none',
	    'private' => 0,
	    'css_classes' => 'element-invisible',
	    ),
	  ),
	  array(
	    'name' => 'Error Markup',
	    'form_key' => 'error_markup',
	    'type' => 'markup',
	    'required' => 0,
	    'weight' => 10,
	    'pid' => 0,
	    'extra' => array(
	      'title_display' => 'none',
	      'private' => 0,
	      'format'=> 'filtered_html',
	      'display_on' => 'form',
	    ),
	  ),
	);

	// Attach the webform to the node.
	$node->webform = array(
	  'confirmation' => '<p>Success! Your credit card will be charged&nbsp;<a href="void(0);" title="Insert this token into your form">[submission:values:amount]</a>.</p>
',
	  'confirmation_format' => 'filtered_html',
	  'redirect_url' => '<confirmation>',
	  'status' => '1',
	  'block' => '0',
	  'teaser' => '0',
	  'allow_draft' => '0',
	  'auto_save' => '0',
	  'submit_notice' => '1',
	  'submit_text' => '',
	  'submit_limit' => '-1', // User can submit more than once.
	  'submit_interval' => '-1',
	  'total_submit_limit' => '-1',
	  'total_submit_interval' => '-1',
	  'record_exists' => TRUE,
	  'roles' => array(
	    0 => '1', // Anonymous user can submit this webform.
	  ),
	  'components' => $components,
	);

	// Save the node.
	node_save($node);
}

function bfc_drupal_donate_form($form, &$form_state) {
	$form['bfc_stripe_secret_key'] = array(
		'#type' => 'textfield',
		'#title' => t('Stripe Secret Key'),
		'#default_value' => variable_get('bfc_stripe_secret_key'),
		'#description' => t('Enter the Stripe Secret API key here. Remember to change this to your live secret key in production. <br> See your keys <a href="https://dashboard.stripe.com/account/apikeys" target="_blank">here</a>.'),
		'#required' =>TRUE,	
	);

	$form['bfc_stripe_publishable_key'] = array(
		'#type' => 'textfield',
		'#title' => t('Stripe Publishable Key'),
		'#default_value' => variable_get('bfc_stripe_publishable_key'),
		'#description' => t('Enter the Stripe Publishable API key here. Remember to change this to your live publishable key in production. <br> See your keys <a href="https://dashboard.stripe.com/account/apikeys" target="_blank">here</a>.'),
		'#required' =>TRUE,	
	);

	$form['bfc_stripe_custom_form_id'] = array(
		'#type' => 'textfield',
		'#title' => t('Webform ID'),
		'#default_value' => variable_get('bfc_stripe_custom_form_id'),
		'#maxlength' => 6,
		'#description' => t('The module has created a default form for you to work off of. Unfortunately it is not yet fully automated, so you must manually enter the form ID here. In order to find the form ID, you must go to <a href="/admin/content" target="_blank">the Content section</a>, and find the webform entitled "Donate". When you follow the link to edit this form, you will see the number ID in the URL. Enter that ID number here, and then save the form. <br><br> The default form includes all the necessary fields required for base Stripe functionality. You may modify the form as needed, or you can create your own webform. In order to enable a new webform, you must update this field with the new form id number, which you can find in the edit form url.'),
	);

	return system_settings_form($form);
}

function bfc_drupal_donate_form_alter(&$form, &$form_state, $form_id) {
	$custom_form = "webform_client_form_" . variable_get('bfc_stripe_custom_form_id', '1');
	if($form['#form_id'] == $custom_form ) :
		if (!empty($_SERVER['HTTPS']) && $_SERVER['HTTPS'] != 'off') {
		} else {
			drupal_set_message('We strongly recommend configuring an SSL server to process this form.', $type='warning');
		}
		drupal_add_js('https://js.stripe.com/v2/', 'external');
		drupal_add_js(drupal_get_path('module', 'bfc_drupal_donate') . "/bfc_drupal_donate.js", 'file');
		$form['submitted']['payment_information']['credit_card_number']['#attributes']['data-stripe'] = "number";
		$form['submitted']['payment_information']['cvc']['#attributes']['data-stripe'] = "cvc";
		$form['submitted']['payment_information']['expiration_date']['expiration_month']['#attributes']['data-stripe'] = "exp_month";
		$form['submitted']['payment_information']['expiration_date']['expiration_year']['#attributes']['data-stripe'] = "exp_year";

		drupal_add_js(array('bfc_drupal_donate' => array('bfc_stripe_publishable_key' => variable_get('bfc_stripe_publishable_key'))), 'setting');
		drupal_add_js(array('bfc_drupal_donate' => array('bfc_stripe_custom_form_id' => variable_get('bfc_stripe_custom_form_id', '1'))), 'setting');

		$form['#submit'][] = 'bfc_drupal_donate_submit_handler';

	endif;
}

function bfc_drupal_donate_submit_handler(&$form, &$form_state) {
	$custom_form = "webform_client_form_" . variable_get('bfc_stripe_custom_form_id', '1');
	$skey = variable_get('bfc_stripe_secret_key');
	if($form['#form_id'] == $custom_form ) :

		require_once('stripe-php-library/init.php');

		// Set your secret key: remember to change this to your live secret key in production
		\Stripe\Stripe::setApiKey($skey);

		// Get the credit card details submitted by the form
		$token = $form['submitted']['stripe_token']['#value'];
		$amount = ($form['submitted']['amount']['#value']) * 100;
		$custname = $form['submitted']['name']['#value'];
		$email = $form['submitted']['email']['#value'];

		// Create the charge on Stripe's servers - this will charge the user's card
		try {
		$charge = \Stripe\Charge::create(array(
		  "amount" => $amount, // amount in cents, again
		  "currency" => "usd",
		  "source" => $token,
		  "metadata" => array(
			  	"name" => $custname,
			  ),
		  "receipt_email" => $email,
		  "description" => "Stripe Web Donation")
		);
		} catch(\Stripe\Error\Card $e) {
		  drupal_set_message("We are sorry, your card has been declined. Please return to the form and try again.", "error");

		}

	endif;
}